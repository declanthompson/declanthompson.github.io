
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    [{"authors":null,"categories":null,"content":"I’m a philosophy graduate student at Stanford University, researching the concept of an algorithm. I’m interested in finding a formal definition for algorithm which can account for common usage in modern computer science, particularly fields like algorithmic analysis. Apart from this, I’m pursuing projects in dynamic logic and network games, and develop a software tool for completing natural deduction proofs. I enjoy taking on new challenges, which allow me to expand my knowledge and skill set.\n","date":-62135596800,"expirydate":-62135596800,"kind":"term","lang":"en","lastmod":-62135596800,"objectID":"2525497d367e79493fd32b198b28f040","permalink":"","publishdate":"0001-01-01T00:00:00Z","relpermalink":"","section":"authors","summary":"I’m a philosophy graduate student at Stanford University, researching the concept of an algorithm. I’m interested in finding a formal definition for algorithm which can account for common usage in modern computer science, particularly fields like algorithmic analysis.","tags":null,"title":"Declan Thompson","type":"authors"},{"authors":["Declan Thompson"],"categories":[],"content":"","date":1674518400,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1674518400,"objectID":"0da2c1b2275aaa5eed418bd51112fd76","permalink":"https://declanthompson.github.io/publication/thompson-execution-2023/","publishdate":"2020-09-04T12:41:15+02:00","relpermalink":"/publication/thompson-execution-2023/","section":"publication","summary":"Traditional models of computation and algorithms take a constructive approach, essentially considering a transition function over a given state space. Yet algorithms may also be considered in terms of the observed behaviour they generate. This paper marries these perspectives with a domain-independent, trace based account of computational and algorithmic processes. We focus on the model of real computation due to Blum, Shub and Smale [3] and provide a precise characterisation of the execution trace sets generated by their machines.","tags":[],"title":"Execution trace sets for real computation","type":"publication"},{"authors":["Declan Thompson"],"categories":[],"content":"","date":1633478400,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1633478400,"objectID":"31659412fe6dbcea8b6f25d808e30cdc","permalink":"https://declanthompson.github.io/publication/thompson-computable-2021/","publishdate":"2020-09-04T12:41:15+02:00","relpermalink":"/publication/thompson-computable-2021/","section":"publication","summary":"This paper gives an execution trace set based account of computability by imposing restrictions on sets of arbitrary sequences of objects, based on a supplied stock of unary tests and binary operations. This account of finite control computability provides a highly general, top down perspective on computability. We prove equivalence with the Turing machine model, under appropriate assumptions, and show how finite control computability can be used to provide a unified account of computability across multiple levels of abstraction.","tags":[],"title":"Computable Execution Traces","type":"publication"},{"authors":[],"categories":null,"content":"","date":1621620000,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1621620000,"objectID":"54e2d3951e9af7e0113b77b7f677babc","permalink":"https://declanthompson.github.io/talk/logicseminar_2021-05-21/","publishdate":"2021-05-21T11:00:00-07:00","relpermalink":"/talk/logicseminar_2021-05-21/","section":"talk","summary":"","tags":[],"title":"Computable Execution Traces \u0026 Algorithms","type":"talk"},{"authors":[],"categories":null,"content":"","date":1590179400,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1590179400,"objectID":"6dceddba756852650b14f4cd1bc30f77","permalink":"https://declanthompson.github.io/talk/4yt_2020-05-22/","publishdate":"2020-09-06T15:58:10+02:00","relpermalink":"/talk/4yt_2020-05-22/","section":"talk","summary":"","tags":[],"title":"Towards a Formal Model of Algorithms","type":"talk"},{"authors":["Declan Thompson"],"categories":[],"content":"","date":1585008000,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1585008000,"objectID":"d185d89624606f0948303141095e4ae1","permalink":"https://declanthompson.github.io/publication/thompson-local-2020/","publishdate":"2020-09-04T12:41:15+02:00","relpermalink":"/publication/thompson-local-2020/","section":"publication","summary":"We investigate a modal logic of model change, introducing a new operator which allows for changing the valuation at a particular state in a model. After investigating some properties of the logic, and aspects of its expressive power, we show it to be undecidable by way of a reduction using memory logic.","tags":[],"title":"Local Fact Change Logic","type":"publication"},{"authors":[],"categories":null,"content":"","date":1582815600,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1582815600,"objectID":"51ef4bab7979d2333baaaa9ca9de0ce6","permalink":"https://declanthompson.github.io/talk/ihpst_20-02-27/","publishdate":"2020-09-06T15:39:36+02:00","relpermalink":"/talk/ihpst_20-02-27/","section":"talk","summary":"Analyses of 'algorithm' as 'effective prodecure' have given us a variety of formal models of computation, which are well understood and extensively studied. Yet instances of these models correspond better with our idea of programs, rather than algorithms. In this talk, I will argue that certain intuitions about algorithms are more properly applied to their implementations, and propose a new direction for an account of 'algorithm' as the word is commonly used.","tags":[],"title":"Formal Characterisations of Algorithm","type":"talk"},{"authors":[],"categories":null,"content":"","date":1581607800,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1581607800,"objectID":"c882cbdd3a14268e4737dd42a699dfdc","permalink":"https://declanthompson.github.io/talk/lira_2020-02-13/","publishdate":"2020-09-04T12:11:25+02:00","relpermalink":"/talk/lira_2020-02-13/","section":"talk","summary":"Local fact change logic (LFC) models the notion of a unilateral change in a network structure. It adds a single, innocent-looking model change operator to the basic modal logic, allowing the valuation at a single point in the model to change. This small addition results in undecidability, which can quickly be shown via a satisfaction-preserving translation from memory logic (ML). The lack of a direct translation raises the question of the relative expressive power of LFC and ML. In this talk, I investigate the relative expressive power of LFC and ML. Such comparisons are often made by either providing a direct translation from one logic to the other, or demonstrating a pair of models which one of the logics can distinguish and the other cannot. In the case of LFC and ML, these two approaches come apart. We are left with a somewhat messy picture of how the two compare.","tags":[],"title":"Local Fact Change Logic, Memory Logic and Expressive Power","type":"talk"},{"authors":null,"categories":null,"content":"The notion of computable function has been widely studied in theoretical computer science, and it is often assumed that any questions we have about algorithms can be answer by using one of the traditional models of computation (Turing machines, recursive functions, etc.). This assumption fails to square with the way algorithm is used in computer science practice. When discussing algorithms, we are not merely interested in input/output behaviour, since we mark a distinction between different algorithms for the same task. On the other hand, an algorithm is not a program or Turing machine, since multiple programs, in different programming languages, can implement the same algorithm. An adequate formal characterisation of algorithm has yet to be proposed.\nThis project focusses on analysing the notion of algorithm, with a view to formalising statements like “MergeSort runs in $O(n \\log n)$ time”, “Program $\\pi$ implements Algorithm $A$” and “Kruskal’s algorithm is correct for the Minimum Spanning Tree problem”. Major existing work in this area can be found by authors including Yuri Gurevich, Yiannia Moschovakis and Walter Dean.\n","date":1578268800,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1578268800,"objectID":"bcce5ac31844ea0249ff1907917829b2","permalink":"https://declanthompson.github.io/project/algorithms/","publishdate":"2020-01-06T00:00:00Z","relpermalink":"/project/algorithms/","section":"project","summary":"Finding a characterisation of 'algorithm' that matches everyday usage.","tags":["algorithms","philosophy of computer science","algorithmic analysis","Turing machines","ASM","recursors"],"title":"Formal Characterisations of 'Algorithm'","type":"project"},{"authors":[],"categories":null,"content":"","date":1571214600,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1571214600,"objectID":"4c4eb14695927d1818e9ffb5a5f682a0","permalink":"https://declanthompson.github.io/talk/tsu_19-10-06/","publishdate":"2020-09-04T12:39:52+02:00","relpermalink":"/talk/tsu_19-10-06/","section":"talk","summary":"The comparative expressive power between two logics is generally measured with respect to the existence of a translation from one to the other. A common technique for showing two logics to have different strengths is by demonstration a pair of models which one of the logics can distinguish, and the other cannot. In this talk, I will demonstrate an instance where these two approaches come apart. The focus will be on comparisons between local fact change and memory logic, two modal logics with model change operators.","tags":[],"title":"Local Fact Change Logic, Memory Logic and Expressive Power","type":"talk"},{"authors":null,"categories":null,"content":"Games played in social networks provide interesting models of numerous social phenomena. In a series of papers, I have investigated properties of Boolean Network Games and related models. A Boolean Network Game consists of a set of players arranged in a social network, each assigned a formula of modal logic as a goal to be made true. Each player has control over the valuation of propositions at their position in the network. The games are inter-reducible with Iterated Boolean Games, though with an exponential increase in size.\nAs a tool for studying games such as these, I have investigated Local Fact Change Logic, a model change modal logic with an operator which changes the valuation at the current world only. The addition of this simple operator causes satisfiability to become undecidable, and model-checking to leap to being PSPACE-complete.\n","date":1570665600,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1570665600,"objectID":"a1bb7018e5d347a1da112168e8b6b95a","permalink":"https://declanthompson.github.io/project/bng/","publishdate":"2019-10-10T00:00:00Z","relpermalink":"/project/bng/","section":"project","summary":"Exploring the interaction between logic and game theory, in games played on social networks.","tags":null,"title":"Games on Networks","type":"project"},{"authors":[],"categories":null,"content":"","date":1556847000,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1556847000,"objectID":"32f91b8db4999deb212e5b945c91633e","permalink":"https://declanthompson.github.io/talk/gsw_19-05-02/","publishdate":"2020-09-07T11:23:03+02:00","relpermalink":"/talk/gsw_19-05-02/","section":"talk","summary":"There's two possible talks to give, and I'll decide based on a vote by those present. First, I can discuss Local Fact Change logic. This talk would assume familiarity with modal logic, and cover a number of interesting and well thought through results. Alternatively, I can discuss Rotational Logic. This talk would assume familiarity with propositional logic, and be much more fun, with very poorly thought through conclusions. It's recreational after all.","tags":["lfc","rotational logic"],"title":"A Night of Recreational Logic","type":"talk"},{"authors":[],"categories":[],"content":"Create slides in Markdown with Wowchemy Wowchemy | Documentation\nFeatures Efficiently write slides in Markdown 3-in-1: Create, Present, and Publish your slides Supports speaker notes Mobile friendly slides Controls Next: Right Arrow or Space Previous: Left Arrow Start: Home Finish: End Overview: Esc Speaker notes: S Fullscreen: F Zoom: Alt + Click PDF Export: E Code Highlighting Inline code: variable\nCode block:\nporridge = \u0026#34;blueberry\u0026#34; if porridge == \u0026#34;blueberry\u0026#34;: print(\u0026#34;Eating...\u0026#34;) Math In-line math: $x + y = z$\nBlock math:\n$$ f\\left( x \\right) = ;\\frac{{2\\left( {x + 4} \\right)\\left( {x - 4} \\right)}}{{\\left( {x + 4} \\right)\\left( {x + 1} \\right)}} $$\nFragments Make content appear incrementally\n{{% fragment %}} One {{% /fragment %}} {{% fragment %}} **Two** {{% /fragment %}} {{% fragment %}} Three {{% /fragment %}} Press Space to play!\nOne Two Three A fragment can accept two optional parameters:\nclass: use a custom style (requires definition in custom CSS) weight: sets the order in which a fragment appears Speaker Notes Add speaker notes to your presentation\n{{% speaker_note %}} - Only the speaker can read these notes - Press `S` key to view {{% /speaker_note %}} Press the S key to view the speaker notes!\nOnly the speaker can read these notes Press S key to view Themes black: Black background, white text, blue links (default) white: White background, black text, blue links league: Gray background, white text, blue links beige: Beige background, dark text, brown links sky: Blue background, thin dark text, blue links night: Black background, thick white text, orange links serif: Cappuccino background, gray text, brown links simple: White background, black text, blue links solarized: Cream-colored background, dark green text, blue links Custom Slide Customize the slide style and background\n{{\u0026lt; slide background-image=\u0026#34;/media/boards.jpg\u0026#34; \u0026gt;}} {{\u0026lt; slide background-color=\u0026#34;#0000FF\u0026#34; \u0026gt;}} {{\u0026lt; slide class=\u0026#34;my-style\u0026#34; \u0026gt;}} Custom CSS Example Let’s make headers navy colored.\nCreate assets/css/reveal_custom.css with:\n.reveal section h1, .reveal section h2, .reveal section h3 { color: navy; } Questions? Ask\nDocumentation\n","date":1549324800,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1549324800,"objectID":"0e6de1a61aa83269ff13324f3167c1a9","permalink":"https://declanthompson.github.io/slides/example/","publishdate":"2019-02-05T00:00:00Z","relpermalink":"/slides/example/","section":"slides","summary":"An introduction to using Wowchemy's Slides feature.","tags":[],"title":"Slides","type":"slides"},{"authors":["Declan Thompson","Jeremy Seligman"],"categories":null,"content":"","date":1483228800,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1483228800,"objectID":"90ddea89d68ac69b040c59dfce2886c6","permalink":"https://declanthompson.github.io/publication/thompson-teaching-2017/","publishdate":"2019-12-16T05:35:17.326978Z","relpermalink":"/publication/thompson-teaching-2017/","section":"publication","summary":"We describe a strategy-based approach to teaching natural deduction using a notation that emphasises the order in which deductions are constructed, to- gether with a LATEX package and Java app to aid in the production of teaching resources and classroom demonstrations. Our approach is aimed at students with little exposure to mathematical method and has been developed while teaching undergraduate classes for philosophy students over the last ten years.","tags":null,"title":"Teaching Natural Deduction in the Right Order with Natural Deduction Planner","type":"publication"},{"authors":null,"categories":null,"content":"","date":1461715200,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1461715200,"objectID":"f07ecdc0fbad23449af88beda5c68402","permalink":"https://declanthompson.github.io/project/ndp/","publishdate":"2016-04-27T00:00:00Z","relpermalink":"/project/ndp/","section":"project","summary":"A proof assistant for generating Fitch-style natural deduction proofs.","tags":["proof assistant","natural deduction","logic"],"title":"Natural Deduction Planner","type":"project"},{"authors":["Cristian S. Calude","Declan Thompson"],"categories":null,"content":"","date":1451606400,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1451606400,"objectID":"0668b55300ecb4bf7dc24f375040a67c","permalink":"https://declanthompson.github.io/publication/calude-incompleteness-2016/","publishdate":"2019-12-16T05:35:17.328972Z","relpermalink":"/publication/calude-incompleteness-2016/","section":"publication","summary":"Incompleteness and undecidability have been used for many years as arguments against automatising the practice of mathematics. The advent of powerful computers and proof-assistants – programs that assist the development of formal proofs by human-machine collaboration – has revived the interest in formal proofs and diminished considerably the value of these arguments.In this paper we discuss some challenges proof-assistants face in handling undecidable problems – the very results cited above – using for illustrations the generic proof-assistant Isabelle.","tags":["Computability Theory","Computable Function","Formal Proof","Recursive Function","Turing Machine"],"title":"Incompleteness, Undecidability and Automated Proofs","type":"publication"},{"authors":["Jeremy Seligman","Declan Thompson"],"categories":null,"content":"","date":1420070400,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1420070400,"objectID":"dac1cf14a7b107b374cc3e28defece45","permalink":"https://declanthompson.github.io/publication/seligman-boolean-2015/","publishdate":"2020-09-06T14:23:02.212557Z","relpermalink":"/publication/seligman-boolean-2015/","section":"publication","summary":"A Boolean Network Game is a game played on a network structure. Players choose actions depending on the actions of those in their neighbourhood and attempt to achieve some goal expressed in a modification of Linear Temporal Logic over an infinite run. Iterated Boolean Games are similar, but lack network structure. We define and give translations between these models, and give some complexity results.","tags":["Boolean Variable","Global State","Linear Temporal Logic","Nash Equilibrium","Transition Function"],"title":"Boolean Network Games and Iterated Boolean Games","type":"publication"},{"authors":["Declan Thompson"],"categories":null,"content":"","date":1420070400,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1420070400,"objectID":"bf6ba99fefd77e0558c91e403668e9c6","permalink":"https://declanthompson.github.io/publication/thompson-formalisation-2015/","publishdate":"2019-12-16T05:35:17.312018Z","relpermalink":"/publication/thompson-formalisation-2015/","section":"publication","summary":"We discuss how formalisation using proof assistants, an unconventional way of doing mathematics which seems to disregard Gödel’s celebrated Incompleteness Theorems, interacts with ideas of understanding. Our experience is based on a formalisation carried out in the Isabelle generic proof assistant.","tags":["Mathematics"],"title":"Formalisation vs. Understanding","type":"publication"},{"authors":["Declan Thompson"],"categories":null,"content":"","date":1420070400,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1420070400,"objectID":"8a29651a480057949baafaa590f48a5f","permalink":"https://declanthompson.github.io/publication/thompson-running-2015/","publishdate":"2019-12-16T05:35:17.320995Z","relpermalink":"/publication/thompson-running-2015/","section":"publication","summary":"Boolean Network Games are iterated games played on a network, in which players choose a set of properties to present each round, with the aim of achieving some goal by way of a machine strategy. We define Boolean Games and Iterated Boolean Games as a brief background to the introduction of Boolean Network Games. We then discuss Boolean Network Games in detail, considering their definition and some basic properties. A translation between Boolean Network Games and Iterated Boolean Games is given, grounding the new model in existing frameworks. Finally, we consider a number of extensions to Boolean Network Games to allow for logical representations of machine strategies and the inclusion of epistemology in the games.","tags":null,"title":"The Running of the Booles: An Investigation into Boolean Network Games","type":"publication"},{"authors":null,"categories":null,"content":"","date":-62135596800,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":-62135596800,"objectID":"f26b5133c34eec1aa0a09390a36c2ade","permalink":"https://declanthompson.github.io/admin/config.yml","publishdate":"0001-01-01T00:00:00Z","relpermalink":"/admin/config.yml","section":"","summary":"","tags":null,"title":"","type":"wowchemycms"},{"authors":null,"categories":null,"content":"","date":-62135596800,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":-62135596800,"objectID":"c9e535399b167f1cb3291a58f54a51e5","permalink":"https://declanthompson.github.io/background/","publishdate":"0001-01-01T00:00:00Z","relpermalink":"/background/","section":"","summary":"","tags":null,"title":"","type":"widget_page"},{"authors":null,"categories":null,"content":"","date":-62135596800,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":-62135596800,"objectID":"6087c0ef875554f4409ac52928d79279","permalink":"https://declanthompson.github.io/projects/","publishdate":"0001-01-01T00:00:00Z","relpermalink":"/projects/","section":"","summary":"","tags":null,"title":"Projects","type":"widget_page"},{"authors":null,"categories":null,"content":"","date":-62135596800,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":-62135596800,"objectID":"55c607b541fd7b1ac205a05633ea7cf0","permalink":"https://declanthompson.github.io/confpub/","publishdate":"0001-01-01T00:00:00Z","relpermalink":"/confpub/","section":"","summary":"","tags":null,"title":"Publications and Conferences","type":"widget_page"}]